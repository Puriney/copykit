% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knnSmooth.R
\name{knnSmooth}
\alias{knnSmooth}
\title{knnSmooth}
\usage{
knnSmooth(scCNA, k = 4, BPPARAM = bpparam())
}
\arguments{
\item{scCNA}{The CopyKit object.}

\item{k}{A numeric with the k nearest neighbor value for smoothing}

\item{BPPARAM}{A \linkS4class{BiocParallelParam} specifying how the function
should be parallelized.}
}
\value{
The CopyKit object with an assay smoothed_bincounts
}
\description{
Smooth bincounts based on k nearest neighbors.
}
\details{
This function uses a k-nearest neighbors approach to smooth cells
raw bincounts. To do so, the k-nearest neighbors are calculated with
\code{\link[BiocNeighbors]{findKNN}}. The bincounts of the k-nearest neighbors
for each cell are tallied and an assay called smoothed_bincounts is added to
\code{\link{assay}}. After, \code{\link{runVst}} and
\code{\link{runSegmentation}}. Are re-run by \code{knnSmooth}.

This function results in a trade-off for the elimination of noise at the cost
of risk of loss of subclonal structure. To minimize the risk of subclonal
structure loss we recommend using the very small values of k.

This function should be followed by applying \code{\link{runVst}} and
\code{\link{runSegmentation}} to the CopyKit object.
}
\examples{
copykit_obj <- mock_bincounts(ncells = 10)
copykit_obj <- runSegmentation(copykit_obj)
copykit_obj <- knnSmooth(copykit_obj)


}
\author{
Darlan Conterno Minussi

Runmin Wei
}

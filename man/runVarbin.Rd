% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runVarbin.R
\name{runVarbin}
\alias{runVarbin}
\title{Read BAM file and perform varbin analysis}
\usage{
runVarbin(
  dir,
  genome = c("hg38", "hg19"),
  bin_size = "200kb",
  remove_Y = FALSE,
  vst = c("ft", "log"),
  seed = 17,
  name = "segment_ratios",
  BPPARAM = bpparam()
)
}
\arguments{
\item{dir}{A path for the directory containing .BAM files from short-read sequencing.}

\item{genome}{A character indicating the choice of genome assembly.}

\item{bin_size}{A character indicating the resolution desired for the scaffold
of the VarBin method, i. e. the bin resulting bin size.}

\item{remove_Y}{A boolean when set to TRUE, removes information from the chrY
from the dataset.}

\item{vst}{A character indicating the variance stabilization transformation
to be performed. See \link{runVst} details.}

\item{seed}{A numeric scalar that sets the seed for CBS segmentation permutation
reproducibility.}

\item{name}{A character with the name for the slot returned by \code{runVarbin}}

\item{BPPARAM}{A \linkS4class{BiocParallelParam} specifying how the function
should be parallelized.}

\item{method}{A character indicating the segmentation method.}
}
\value{
An scCNA object containing the bin counts, the ratios and the segment
ratios.
}
\description{
runVarbin performs the variable binning (VarBin) algorithm to a series of BAM
files resulting from short-read sequencing.
}
\details{
runVarbin is a convenient wrapper for CopyKit's pre-processing module.
It runs \code{runCountReads}, \code{runVst} and, \code{runSegmentation}.

\code{runCountReads} takes as input duplicate marked BAM files from whole
genome sequencing and runs the variable binning pipeline algorithm. Briefly,
the genome is split into pre-determined bins. The bin size is controlled by
the argument \code{bin_size}. By using VarBin, for a diploid cell, each bin
will receive equal amount of reads, controlling for mappability.
A lowess function is applied to perform GC correction across the bins. The argument
\code{genome} can be set to 'hg38' or 'hg19' to select the scaffolds genome
assembly.
Information regarding the alignment of the reads to the bins and from the bam
files are stored in the #' \code{\link{[SummarizedExperiment]{colData}}}.

\code{runVst} performs variance stabilization to reduce the overdispersion
from the negative binomial distribution nature of the bin counts and reduce
technical bias. The argument \code{vst} controls the choice of the transformation
allowing either the Freeman-Tukey transformation by using the option 'ft' (recommended)
or a logarithmic transformation with the option 'log'. Using a 'log' transformation
may result in long segmentation times for a few cells with large breakpoint counts.

\code{runSegmentation} Fits a piece-wise constant function to the transformed
 bin counts using the Circular Binary Segmentation algorithm from \code{\link{[DNAcopy{segment}]}}.
 By default it applies undo.prune with value of 0.05. The resulting segment
 means are further refined with MergeLevels to join adjacent segments with
 non-significant differences in segmented means.
}
\examples{


}
\author{
Darlan Conterno Minussi
}

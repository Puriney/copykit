% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findOutliers.R
\name{findOutliers}
\alias{findOutliers}
\title{findOutliers()}
\usage{
findOutliers(
  scCNA,
  assay = "segment_ratios",
  k = 5,
  resolution = 0.9,
  BPPARAM = BiocParallel::bpparam()
)
}
\arguments{
\item{scCNA}{CopyKit object.}

\item{assay}{String with the name of the assay to pull data.}

\item{k}{A numeric scalar with the number k-nearest-neighbor cells to
calculate the mean correlation}

\item{resolution}{A numeric scalar that set's how strict the
correlation cut off will be.}

\item{BPPARAM}{A \linkS4class{BiocParallelParam} specifying how the function
should be parallelized.}
}
\value{
Adds a column 'outlier' to
\code{\link[SummarizedExperiment]{colData}}. Cells that pass the filtering
criteria receive the label "kept", whereas cells that do not pass the
filtering criteria receive the label "removed".
}
\description{
Uses a nearest neighbor approach to find noise copy number profiles within
the segment means.
}
\details{
\code{findOutliers} To detect low-quality cells, CopyKit calculates
 the Pearson correlation matrix of all samples from the segment ratio means.
 Next, we calculate a sample-wise mean of the correlation between a sample
 and its k-nearest-neighbors. Samples in which the correlation value is lower
 than the defined threshold are classified as low-quality cells.
}
\examples{
copykit_obj <- copykit_example()
copykit_obj <- findNormalCells(copykit_obj)
copykit_obj <- copykit_obj[, colData(copykit_obj)$is_normal == "FALSE"]
copykit_obj <- findOutliers(copykit_obj)
}
\author{
Hua-Jun Wu

Darlan Conterno Minussi

Junke Wang
}
